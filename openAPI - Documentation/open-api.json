{
	"openapi":"3.0.3",
	"info": {
		"title": "C-Track App RESTful API",
		"version": "1.0",
		"description": "OpenAPI for C-Track App RESTful API",
		"contact": {
			"name": "C-Track App Team",
			"email": "pebruwantoro.doni@gmail.com",
			"url": "https://www.linkedin.com/in/doni-pebruwantoro-7bb145136/"
		},
		"license": {
			"name": "APACHE 2.0",
			"url": "https://www.apache.org/licenses/LICENSE-2.0"
		}
	},
	"externalDocs": {
		"description":"Github C-Track App",
		"url": "https://github.com/pebruwantoro"
	},
	"servers": [
		{
			"description": "C-Track App List API Server",
			"url": "https://{environment}.menyesuaikan ya",
			"variables": {
				"environment": {
					"default": "dev",
					"enum": [
						"dev",
						"qa",
						"prod"
					]
				}
			}
		}
	],
	"paths": {
		"/patients": {
			"post": {
				"tags": ["C-Track App - Patient"],
			  	"summary": "Create New Patient",
				"description": "Create New Patient Account",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateOrUpdateUser"
							},
							"examples": {
								"Iwan Budianto": {
									"description": "Example Create New Patient",
									"value": {
										"PatientID": "3030303030303030",
										"DOB": "1995-10-10",
										"POB": "Merauke",
										"Address": "Jl Panglima Sudirman",
										"City": "Jakarta",
										"Province": "DKI Jakarta",
										"Gender": "Male",
										"Blood Type": "AB",
										"Religion": "Kristen",
										"Marital Status": "Single",
										"User": {
											"UserID": "351010101010",
											"UserDOB": "iwanbuds",
											"Password": "12345",
											"Role": "Patient",
											"Token": "qwerty" 	
										}
									}
								},
								"Santoso Budianto": {
									"description": "Example Create New Patient",
									"value": {
										"PatientID": "3737373737373737",
										"DOB": "1995-10-10",
										"POB": "Makasar",
										"Address": "Jl Panglima Sudirman",
										"City": "Jakarta",
										"Province": "DKI Jakarta",
										"Gender": "Male",
										"Blood Type": "B",
										"Religion": "Katholik",
										"Marital Status": "Single",
										"User": {
											"UserID": "351010101010",
											"UserDOB": "sansbud",
											"Password": "12345",
											"Role": "Patient",
											"Token": "qwerty" 	
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success Create New Patient",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"Iwan Budianto": {
										"description": "Example Create New Patient",
										"value": {
											"PatientID": "3030303030303030",
											"DOB": "1995-10-10",
											"POB": "Merauke",
											"Address": "Jl Panglima Sudirman",
											"City": "Jakarta",
											"Province": "DKI Jakarta",
											"Gender": "Male",
											"Blood Type": "AB",
											"Religion": "Kristen",
											"Marital Status": "Single",
											"User": {
												"UserID": "351010101010",
												"UserDOB": "iwanbuds",
												"Password": "12345",
												"Role": "Patient",
												"Token": "qwerty"
											}
										}
									},
									"Santoso Budianto": {
										"description": "Example Create New Doctor",
										"value": {
											"PatientID": "3737373737373737",
											"DOB": "1995-10-10",
											"POB": "Makasar",
											"Address": "Jl Panglima Sudirman",
											"City": "Jakarta",
											"Province": "DKI Jakarta",
											"Gender": "Male",
											"Blood Type": "B",
											"Religion": "Katholik",
											"Marital Status": "Single",
											"User": {
												"UserID": "351010101010",
												"UserDOB": "sansbud",
												"Password": "12345",
												"Role": "Patient",
												"Token": "qwerty" 	
											}
										}
									}
								}
							}
						}
					},
					"400":{
						"description": "Can not Create Patient",
						"content": {
							"Application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples":{
									"Iwan Budianto": {
										"description": "Example Unsuccess Create New Patient",
										"value": {
												"message": "Can not insert data"
											}
									},
									"Santoso Budianto": {
										"description": "Example Unsuccess Create New Patient",
										"value": {
												"message": "Can not insert data"
										}
									}
								}
							}
						}
					}
				}
			} 
		},
		  "/patients/{patientId}": {
			"get" : {
				"security": [
					{
						"JWTAuth":[]
					}
				],
				"tags": ["C-Track App - Patient"],
			  	"summary": "Get Data Patient by id",
				"description": "Get Data Patient by id",
				"parameters": [
					{
						"name": "patientId",
						"in": "path",
						"required": true,
						"description": "Filter Get Data Patient by id",
						"schema": {
							"type": "string",
							"nullable": false,
							"minLength": 1,
							"maxLength": 16
						},
						"examples": {
							"3030303030303030": {
								"value": "3030303030303030"
							},
							"3737373737373737": {
								"value": "3737373737373737"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success Get Data Patient by id",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ArrayUsers"
								},
								"examples": {
									"3030303030303030": {
										"description": "Example Success Get Data Patient by id",
										"value": [
											{
												"PatientID": "3030303030303030",
												"DOB": "1995-10-10",
												"POB": "Merauke",
												"Address": "Jl Panglima Sudirman",
												"City": "Jakarta",
												"Province": "DKI Jakarta",
												"Gender": "Male",
												"Blood Type": "AB",
												"Religion": "Kristen",
												"Marital Status": "Single",
												"User": {
													"UserID": "351010101010",
													"UserDOB": "iwanbuds",
													"Password": "12345",
													"Role": "Patient",
													"Token": "qwerty" 	
												}
											}
										]
									},
									"3737373737373737":{
										"description": "Example Get Data Patient by id",
										"value": {
											"PatientID": "3737373737373737",
											"DOB": "1995-10-10",
											"POB": "Makasar",
											"Address": "Jl Panglima Sudirman",
											"City": "Jakarta",
											"Province": "DKI Jakarta",
											"Gender": "Male",
											"Blood Type": "B",
											"Religion": "Katholik",
											"Marital Status": "Single",
											"User": {
												"UserID": "351010101010",
												"UserDOB": "sansbud",
												"Password": "12345",
												"Role": "Patient",
												"Token": "qwerty" 	
											}
										}
									}
								}
							}
						}
					},
					"400":{
						"description": "Can not fetch data Patient",
						"content": {
							"Application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"3030303030303030": {
										"description": "Example Unsuccess Fetch Data Patient",
											"value": {
												"message": "Patient not found"
											}
									},
									"3131313131313131": {
										"description": "Example Unsuccess Fetch Data Patient",
											"value": {
												"message": "Patient not found"
											}
									}
								}	
							}
						}
					}
				}
			},
			"put": {
				"security": [
					{
						"JWTAuth":[]
					}
				],
				"tags": ["C-Track App - Patient"],
			  	"summary": "Update Data Patient by id",
				"description": "Update Data Patient by id",
				"parameters": [
					{
						"name": "patientId",
						"in": "path",
						"required": true,
						"description": "Filter Update Data Patient by id",
						"schema": {
							"type": "string",
							"nullable": false,
							"minLength": 1,
							"maxLength": 16
						},
						"examples": {
							"3030303030303030": {
								"value": "3030303030303030"
							},
							"3737373737373737": {
								"value": "3131313131313131"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success Update Data Patient",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"3030303030303030": {
										"description": "Example Update Patient",
										"value": [
											{
												"PatientID": "3030303030303030",
												"DOB": "1995-10-10",
												"POB": "Merauke",
												"Address": "Jl Panglima Sudirman",
												"City": "Jakarta",
												"Province": "DKI Jakarta",
												"Gender": "Male",
												"Blood Type": "AB",
												"Religion": "Kristen",
												"Marital Status": "Single",
												"User": {
													"UserID": "351010101010",
													"UserDOB": "iwanbuds",
													"Password": "12345",
													"Role": "Patient",
													"Token": "qwerty" 	
												}
											}
										]
									},
									"3737373737373737": {
										"description": "Example Update Patient",
										"value": [
											{
												"PatientID": "3737373737373737",
												"DOB": "1995-10-10",
												"POB": "Makasar",
												"Address": "Jl Panglima Sudirman",
												"City": "Jakarta",
												"Province": "DKI Jakarta",
												"Gender": "Male",
												"Blood Type": "B",
												"Religion": "Katholik",
												"Marital Status": "Single",
												"User": {
													"UserID": "351010101010",
													"UserDOB": "sansbud",
													"Password": "12345",
													"Role": "Patient",
													"Token": "qwerty" 	
												}
											}
										]
									}
								}
							}
						}
					},
					"400":{
						"description": "Can not Update data Patient",
						"content": {
							"Application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"3030303030303030": {
										"description": "Example Unsuccess Update Data Patient",
											"value": {
												"message": "Patient not found"
											}
									},
									"3131313131313131": {
										"description": "Example Unsuccess Update Data Patient",
											"value": {
												"message": "Patient not found"
											}
									}
								}	
							}
						}
					}
				}
			},
			"delete": {
				"security": [
					{
						"JWTAuth":[]
					}
				],
				"tags": ["C-Track App - Patient"],
			  	"summary": "Delete Data Patient by id",
				"description": "Delete Data Patient by id",
				"parameters": [
					{
						"name": "patientId",
						"in": "path",
						"required": true,
						"description": "Filter Delete Data Patient by id",
						"schema": {
							"type": "string",
							"nullable": false,
							"minLength": 1,
							"maxLength": 16
						},
						"examples":{
							"3030303030303030": {
								"value": "3030303030303030"
							},
							"3737373737373737": {
								"value": "3737373737373737"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success Delete Patient Account",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean"
										}
									}
								},
								"examples": {
									"3030303030303030": {
										"description": "Success Delete Patient",
										"value": {
											"message": "success delete Patient",
											"success": true
										}
									},
									"3737373737373737": {
										"description": "Success Delete Patient",
										"value": {
											"message": "success delete Patient",
											"success": true
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Can not delete data Patient",
						"content": {
							"Application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"3030303030303030": {
										"description": "Example Unsuccess Delete Data Patient",
											"value": {
												"message": "Patient not found, Can not Delete Data"
											}
									},
									"3737373737373737": {
										"description": "Example Unsuccess Delete Data Patient",
											"value": {
												"message": "Patient not found, Can not Delete Data"
											}
									}
								}
							}
						}
					}
				}
			}
		},
		"/login/users": {
			"post": {
				"security": [
					{
						"JWTAuth":[]
					}
				],
				"tags": ["C-Track App - Login"],
				"summary": "Login When You Have User Account",
				"description": "Login into C-Track App When You Have User Account",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateOrUpdateUser"
							},
							"examples": {
								"Doni Pebruwantoro": {
									"description": "Login into C-Track App When You Have User Account Doni Pebruwantoro",
									"value": {
										"ID": 351210010120090008,
										"Password": 12345
									}
								},
								"David Beckham": {
									"description": "Login into C-Track App When You Have User Account David Beckham",
									"value": {
										"ID": 351910010120090001,
										"Password": 56789
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success Login into C-Track App",
						"content": {
							"application/json" : {
								"schema": {
									"$ref": "#/components/schemas/CreateOrUpdateUser"
								},
								"examples": {
									"Doni Pebruwantoro": {
										"description": "Success Login into C-Track App as Doni Pebruwantoro",
										"value": {
											"message": "welcome",
											"ID": 351910010120090001,
											"Name": "Doni Pebruwantoro",
											"Role": "Patient",
											"Token": "asdfgh"
										}
									},
									"David Beckham": {
										"description": "Success Login into C-Track App as David Beckham",
										"value": {
											"message": "welcome",
											"ID": 351910010120090001,
											"Name": "David Beckham",
											"Role": "Patient",
											"Token": "asdfgh"
										}
									}
								}
							}
						}
					},
					"400" :{
						"description": "Username or Password incorrect",
						"content": {
							"application/json":{
								"schema":{
									"$ref": "#/components/schemas/CreateOrUpdateUser"
								},
								"examples": {
									"Doni Pebruwantoro": {
										"description": "Unsuccess Login into C-Track App",
										"value":{
											"message": "Username or Password incorrect"
										}
									},
									"David Beckham": {
										"description": "Unsuccess Login into C-Track App",
										"value":{
											"message": "Username or Password incorrect"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/users": {
			"post": {
				"tags": ["C-Track App - User"],
				"summary": "Create New User",
				"description": "Create New User Account",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateOrUpdateUser"
							},
							"examples": {
								"Doni Pebruwantoro": {
									"description": "Example Create New User Account Doni Pebruwantoro",
									"value": {
										"UserId": "351210010120090008",
										"Username": "Doni Pebruwantoro",
										"Password": "012345",
										"Role": "Patient",
										"Token": "ahbdabfef"
									}
								},
								"David Beckham": {
									"description": "Example Create New User Account David Beckham",
									"value": {
										"UserId": "351910010120090001",
										"Username": "David Beckham",
										"Password": "123456",
										"Role": "Checker",
										"Token": "ajbfaibuea"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success Create New User Account",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"Doni Pebruwantoro": {
										"description": "Example Create New User Account Doni Pebruwantoro",
										"value": [
											{
											"UserId": "351210010120090008",
											"Username": "Doni Pebruwantoro",
											"Password": "012345",
											"Role": "Patient",
											"Token": "ahbdabfef"
											}
										]
									},
									"David Beckham": {
										"description": "Example Create New User Account David Beckham",
										"value": [
											{
											"UserId": "351910010120090001",
											"Username": "David Beckham",
											"Password": "123456",
											"Role": "Checker",
											"Token": "ajbfaibuea"
											}
										]
									}
								}
							}
						}
					},
					"400":{
						"description": "Can not Create User",
						"content": {
							"Application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples":{
									"Doni Pebruwantoro": {
										"description": "Example Unsuccess Create New User Doni Pebruwantoro",
										"value": {
											"message": "Can not insert data"
										}
									},
									"David Beckham": {
										"description": "Example Unsuccess Create New User David Beckham",
										"value": {
											"message": "Can not insert data"
										}
									}
								}
							}
						}
					}
				}
			} 
		},
		"/users/{userId}": {
			"get" : {
				"security": [
					{
						"JWTAuth":[]
					}
				],
				"tags": ["C-Track App - User"],
				"summary": "Get Data User by id",
				"description": "Get Data User by id",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"description": "Filter Get Data User by id",
						"schema": {
							"type": "string",
							"nullable": false,
							"minLength": 1,
							"maxLength": 16
						},
						"examples": {
							"351210010120090008": {
								"value": "351210010120090008"
							},
							"351910010120090001": {
								"value": "351910010120090001"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success Get Data User by id",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ArrayUsers"
								},
								"examples": {
									"Doni Pebruwantoro": {
										"description": "Example Create New User Account Doni Pebruwantoro",
										"value": [
											{
											"UserId": "351210010120090008",
											"Username": "Doni Pebruwantoro",
											"Password": "012345",
											"Role": "Patient",
											"Token": "ahbdabfef"
											}
										]
									},
									"David Beckham": {
										"description": "Example Create New User Account David Beckham",
										"value": [
											{
											"UserId": "351910010120090001",
											"Username": "David Beckham",
											"password": "123456",
											"Role": "Checker",
											"Token": "ajbfaibuea"
											}
										]
									}
								}
							}
						}
					},
					"400":{
						"description": "Can not fetch data User",
						"content": {
							"Application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"351210010120090008": {
										"description": "Example Unsuccess Fetch Data User",
											"value": {
												"message": "User not found"
											}
									},
									"351910010120090001": {
										"description": "Example Unsuccess Fetch Data User",
											"value": {
												"message": "User not found"
											}
									}
								}	
							}
						}
					}
				}
			},
			"put": {
				"security": [
					{
						"JWTAuth":[]
					}
				],
				"tags": ["C-Track App - User"],
				"summary": "Update Data User by id",
				"description": "Update Data User by id",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"description": "Filter Get Data User by id",
						"schema": {
							"type": "string",
							"nullable": false,
							"minLength": 1,
							"maxLength": 16
						},
						"examples": {
							"351210010120090008": {
								"value": "351210010120090008"
							},
							"351910010120090001": {
								"value": "351910010120090001"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success Update Data User",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"Doni Pebruwantoro": {
										"description": "Example Update User Account Doni Pebruwantoro",
										"value": {
											"UserId": "351210010120090008",
											"Username": "Doni Pebruwantoro",
											"Password": "012345",
											"Role": "Patient",
											"Token": "ahbdabfef"
										}
									},
									"David Beckham": {
										"description": "Example Update User Account David Beckham",
										"value": {
											"UserId": "351910010120090001",
											"Username": "David Beckham",
											"password": "123456",
											"Role": "Checker",
											"Token": "ajbfaibuea"
										}
									}
								}
							}
						}
					},
					"400":{
						"description": "Can not Update Data User",
						"content": {
							"Application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"351210010120090008": {
										"description": "Example Unsuccess Update Data User",
											"value": {
												"message": "User not found"
											}
									},
									"351910010120090001": {
										"description": "Example Unsuccess Update Data User",
											"value": {
												"message": "User not found"
											}
									}
								}	
							}
						}
					}
				}
			},
			"delete": {
				"security": [
					{
						"JWTAuth":[]
					}
				],
				"tags": ["C-Track App - User"],
				"summary": "Delete Data User by id",
				"description": "Delete Data User by id",
				"parameters": [
					{
						"name": "doctorId",
						"in": "path",
						"required": true,
						"description": "Filter Delete Data Doctor by id",
						"schema": {
							"type": "string",
							"nullable": false,
							"minLength": 1,
							"maxLength": 16
						},
						"examples":{
							"3030303030303030": {
								"value": "3030303030303030"
							},
							"3131313131313131": {
								"value": "3131313131313131"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success Delete User Account",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean"
										}
									}
								},
								"examples": {
									"3030303030303030": {
										"description": "Success Delete User Account",
										"value": {
											"message": "success delete User",
											"success": true
										}
									},
									"3131313131313131": {
										"description": "Success Delete User Account",
										"value": {
											"message": "success delete User",
											"success": true
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Can not delete data User",
						"content": {
							"Application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"3030303030303030": {
										"description": "Example Unsuccess Delete Data User",
											"value": {
												"message": "User not found, Can not Delete Data"
											}
									},
									"3131313131313131": {
										"description": "Example Unsuccess Delete Data User",
											"value": {
												"message": "User not found, Can not Delete Data"
											}
									}
								}
							}
						}
					}
				}
			}
		},
		"/doctors": {
			"post": {
				"tags": ["C-Track App - Doctor"],
			  	"summary": "Create New Doctor",
				"description": "Create New Doctor Account",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateOrUpdateUser"
							},
							"examples": {
								"dr. Boyke Santoso": {
									"description": "Example Create New Doctor Account dr. Boyke Santoso",
									"value": {
										"DoctorID": "3030303030303030",
										"Name": "dr. Boyke Santoso",
										"Medical Facility Name": "RSUD Pertamina Jakarta",
										"Medical Facility Address": "Jakarta Pusat",
										"User": {
											"UserID": "351010101010",
											"Username": "bamsoke",
											"Password": "12345",
											"Role": "Checker",
											"Token": "qwerty" 	
										}
									}
								},
								"dr. Felix Harahap": {
									"description": "Example Create New Doctor Account dr. Felix Harahap",
									"value": {
										"DoctorID": "3131313131313131",
										"Name": "dr. Felix Harahap",
										"Medical Facility Name": "RSUD Pertamina Jakarta",
										"Medical Facility Address": "Jakarta Pusat",
										"User": {
											"UserID": "351010101010",
											"Username": "bamsoke",
											"Password": "12345",
											"Role": "Checker",
											"Token": "qwerty" 	
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success Create New Doctor Account",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"dr. Boyke Santoso": {
										"description": "Example Create New Doctor dr. Boyke Santoso",
										"value": {
											"DoctorID": "3030303030303030",
											"Name": "dr. Boyke Santoso",
											"Medical Facility Name": "RSUD Pertamina Jakarta",
											"Medical Facility Address": "Jakarta Pusat",
											"User": {
												"UserID": "351010101010",
												"Username": "bamsoke",
												"Password": "12345",
												"Role": "Checker",
												"Token": "qwerty" 	
											}
										}
									},
									"dr. Felix Harahap": {
										"description": "Example Create New Doctor dr. Felix Harahap",
										"value": {
											"DoctorID": "3131313131313131",
											"Name": "dr. Felix Harahap",
											"Medical Facility Name": "RSUD Pertamina Jakarta",
											"Medical Facility Address": "Jakarta Pusat",
											"User": {
												"UserID": "351010101010",
												"Username": "bamsoke",
												"Password": "12345",
												"Role": "Checker",
												"Token": "qwerty" 	
											}
										}
									}
								}
							}
						}
					},
					"400":{
						"description": "Can not Create Doctor",
						"content": {
							"Application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples":{
									"dr. Boyke Santoso": {
										"description": "Example Unsuccess Create New Doctor dr. Boyke Santoso",
										"value": {
												"message": "Can not insert data"
											}
									},
									"dr. Felix Harahap": {
										"description": "Example Unsuccess Create New Doctor dr. Felix Harahap",
										"value": {
												"message": "Can not insert data"
										}
									}
								}
							}
						}
					}
				}
			} 
		},
		  "/doctors/{doctorsId}": {
			"get" : {
				"security": [
					{
						"JWTAuth":[]
					}
				],
				"tags": ["C-Track App - Doctor"],
			  	"summary": "Get Data Doctor by id",
				"description": "Get Data Doctor by id",
				"parameters": [
					{
						"name": "doctorsId",
						"in": "path",
						"required": true,
						"description": "Filter Get Data Doctor by id",
						"schema": {
							"type": "string",
							"nullable": false,
							"minLength": 1,
							"maxLength": 16
						},
						"examples": {
							"3030303030303030": {
								"value": "3030303030303030"
							},
							"3131313131313131": {
								"value": "3131313131313131"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success Get Data Doctor by id",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ArrayUsers"
								},
								"examples": {
									"3030303030303030": {
										"description": "Example Success Get Data Doctor by id",
										"value": [
											{
												"DoctorID": "3030303030303030",
												"Name": "dr. Boyke Santoso",
												"Medical Facility Name": "RSUD Pertamina Jakarta",
												"Medical Facility Address": "Jakarta Pusat",
												"User": {
													"UserID": "351010101010",
													"Username": "bamsoke",
													"Password": "12345",
													"Role": "Checker",
													"Token": "qwerty" 	
												}
											}
										]
									},
									"3131313131313131":{
										"description": "Example Create New Doctor Account dr. Felix Harahap",
										"value": {
											"DoctorID": "3131313131313131",
											"Name": "dr. Felix Harahap",
											"Medical Facility Name": "RSUD Pertamina Jakarta",
											"Medical Facility Address": "Jakarta Pusat",
											"User": {
												"UserID": "351010101010",
												"Username": "bamsoke",
												"Password": "12345",
												"Role": "Checker",
												"Token": "qwerty" 	
											}
										}
									}
								}
							}
						}
					},
					"400":{
						"description": "Can not fetch data Doctor",
						"content": {
							"Application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"3030303030303030": {
										"description": "Example Unsuccess Fetch Data Doctor",
											"value": {
												"message": "Doctor not found"
											}
									},
									"3131313131313131": {
										"description": "Example Unsuccess Fetch Data Doctor",
											"value": {
												"message": "Doctor not found"
											}
									}
								}	
							}
						}
					}
				}
			},
			"put": {
				"security": [
					{
						"JWTAuth":[]
					}
				],
				"tags": ["C-Track App - Doctor"],
			  	"summary": "Update Data Doctor by id",
				"description": "Update Data Doctor by id",
				"parameters": [
					{
						"name": "doctorId",
						"in": "path",
						"required": true,
						"description": "Filter Get Data Doctor by id",
						"schema": {
							"type": "string",
							"nullable": false,
							"minLength": 1,
							"maxLength": 16
						},
						"examples": {
							"3030303030303030": {
								"value": "3030303030303030"
							},
							"3737373737373737": {
								"value": "3737373737373737"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success Update Data Patient",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"3030303030303030": {
										"description": "Example Update Doctor",
										"value": [
											{
												"DoctorID": "3030303030303030",
												"Name": "dr. Boyke Santoso",
												"Medical Facility Name": "RSUD Pertamina Jakarta",
												"Medical Facility Address": "Jakarta Pusat",
												"User": {
													"UserID": "351010101010",
													"Username": "bamsoke",
													"Password": "12345",
													"Role": "Checker",
													"Token": "qwerty" 	
												}
											}
										]
									},
									"3131313131313131": {
										"description": "Example Update Doctor Account dr. Felix Harahap",
										"value": [
											{
												"DoctorID": "3131313131313131",
												"Name": "dr. Felix Harahap",
												"Medical Facility Name": "RSUD Pertamina Jakarta",
												"Medical Facility Address": "Jakarta Pusat",
												"User": {
													"UserID": "351010101010",
													"Username": "bamsoke",
													"Password": "12345",
													"Role": "Checker",
													"Token": "qwerty"
												}
											}
										]
									}
								}
							}
						}
					},
					"400":{
						"description": "Can not Update data Doctor",
						"content": {
							"Application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"3030303030303030": {
										"description": "Example Unsuccess Update Data Doctor",
											"value": {
												"message": "Doctor not found"
											}
									},
									"3131313131313131": {
										"description": "Example Unsuccess Update Data Doctor",
											"value": {
												"message": "Doctor not found"
											}
									}
								}	
							}
						}
					}
				}
			},
			"delete": {
				"security": [
					{
						"JWTAuth":[]
					}
				],
				"tags": ["C-Track App - Doctor"],
			  	"summary": "Delete Data Doctor by id",
				"description": "Delete Data Doctor by id",
				"parameters": [
					{
						"name": "doctorId",
						"in": "path",
						"required": true,
						"description": "Filter Delete Data Doctor by id",
						"schema": {
							"type": "string",
							"nullable": false,
							"minLength": 1,
							"maxLength": 16
						},
						"examples":{
							"3030303030303030": {
								"value": "3030303030303030"
							},
							"3131313131313131": {
								"value": "3131313131313131"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success Delete Doctor Account",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean"
										}
									}
								},
								"examples": {
									"3030303030303030": {
										"description": "Success Delete Doctor Account",
										"value": {
											"message": "success delete doctor",
											"success": true
										}
									},
									"3131313131313131": {
										"description": "Success Delete Doctor Account",
										"value": {
											"message": "success delete doctor",
											"success": true
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Can not delete data Doctor",
						"content": {
							"Application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"3030303030303030": {
										"description": "Example Unsuccess Delete Data Doctor",
											"value": {
												"message": "Doctor not found, Can not Delete Data"
											}
									},
									"3131313131313131": {
										"description": "Example Unsuccess Delete Data Doctor",
											"value": {
												"message": "Doctor not found, Can not Delete Data"
											}
									}
								}
							}
						}
					}
				}
			}
		},
		  "/checkers": {
			"post": {
				"tags": ["C-Track App - Checker"],
			  	"summary": "Create New Checker",
				"description": "Create New Checker",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateOrUpdateUser"
							},
							"examples": {
								"Bambang Pranoto": {
									"description": "Example Create New Checker Account Bambang Pranoto",
									"value": {
										"EmployeeID": "1818181818181818",
										"Name": "Bambang Pranoto",
										"OfficeName": "Mall Kelapa Gading Jakarta",
										"OfficeAddress": "Jakarta",
										"UserID": "351010101010",
										"Username": "bamsoke",
										"Password": "12345",
										"Role": "Checker",
										"Token": "qwerty"
									}
								},
								"Kurniawan Yulianto": {
									"description": "Example Create New Checker Account Kurniawan Yulianto",
									"value": {
										"EmployeeID": "1919191919191919",
										"Name": "Kurniawan Yulianto",
										"OfficeName": "Mall Kelapa Gading Jakarta",
										"OfficeAddress": "Jakarta",
										"UserID": "351111111111",
										"Username": "kurniawanasik",
										"Password": "12345",
										"Role": "Checker",
										"Token": "qwerty"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success Create New Checker",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"Bambang Pranoto": {
										"description": "Example Create New Checker Bambang Pranoto",
										"value": {
											"EmployeeID": "1818181818181818",
											"Name": "Bambang Pranoto",
											"OfficeName": "Mall Kelapa Gading Jakarta",
											"OfficeAddress": "Jakarta",
											"UserID": "351010101010",
											"Username": "bamsoke",
											"Password": "12345",
											"Role": "Checker",
											"Token": "qwerty"
										}
									},
									"Kurniawan Yulianto": {
										"description": "Example Create New Checker Kurniawan Yulianto",
										"value": {
											"EmployeeID": "1919191919191919",
											"Name": "Kurniawan Yulianto",
											"OfficeName": "Mall Kelapa Gading Jakarta",
											"OfficeAddress": "Jakarta",
											"UserID": "351111111111",
											"Username": "kurniawanasik",
											"Password": "12345",
											"Role": "Checker",
											"Token": "qwerty"
										}
									}
								}
							}
						}
					},
					"400":{
						"description": "Can not Create Checker",
						"content": {
							"Application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"Bambang Pranoto": {
										"description": "Example Unsuccess Create New Checker Bambang Pranoto",
											"value": {
												"message": "Can not insert data"
											}
									},
									"Kurniawan Yulianto": {
										"description": "Example Unsuccess Create New Checker Kurniawan Yulianto",
											"value": {
												"message": "Can not insert data"
											}
									}
								}	
							}
						}
					}
				}
			} 
		},
		  "/checkers/{checkerId}": {
			"get" : {
				"security": [
					{
						"JWTAuth":[]
					}
				],
				"tags": ["C-Track App - Checker"],
				"summary": "Get Data Checker by id",
				"description": "Get Data Checker by id",
				"parameters": [
					{
						"name": "checkerId",
						"in": "path",
						"required": true,
						"description": "Filter Get Data Checker by id",
						"schema": {
							"type": "string",
							"nullable": false,
							"minLength": 1,
							"maxLength": 16
						},
						"examples": {
							"1818181818181818": {
								"value": "1818181818181818"
							},
							"1919191919191919": {
								"value": "1919191919191919"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success Get Data Checker by id",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ArrayUsers"
								},
								"examples": {
									"1818181818181818": {
										"description": "Example Success Get Data Checker by id",
										"value": [
											{
												"message": "Success get data checker",
												"EmployeeID": "1818181818181818",
												"Name": "Bambang Pranoto",
												"OfficeName": "Mall Kelapa Gading Jakarta",
												"OfficeAddress": "Jakarta",
												"UserID": "351010101010",
												"Username": "bamsoke",
												"Password": "12345",
												"Role": "Checker",
												"Token": "qwerty"
											}
										]
									},
									"1919191919191919": {
										"description": "Example Success Get Data Checker by id",
										"value": [
											{
												"message": "Success get data checker",
												"EmployeeID": "1919191919191919",
												"Name": "Kurniawan Yulianto",
												"OfficeName": "Mall Kelapa Gading Jakarta",
												"OfficeAddress": "Jakarta",
												"UserID": "351111111111",
												"Username": "kurniawanasik",
												"Password": "12345",
												"Role": "Checker",
												"Token": "qwerty"
											}
										]
									}
								}
							}
						}
					},
					"400":{
						"description": "Can not fetch data Checker",
						"content": {
							"Application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"1818181818181818": {
										"description": "Example Unsuccess Fetch Data Checker",
											"value": {
												"message": "Checker not found"
											}
									},
									"1919191919191919": {
										"description": "Example Unsuccess Fetch Data Checker",
											"value": {
												"message": "Checker not found"
											}
									}
								}	
							}
						}
					}
				}
			},
			"put": {
				"security": [
					{
						"JWTAuth":[]
					}
				],
				"tags": ["C-Track App - Checker"],
			  	"summary": "Update Data Checker by id",
				"description": "Update Data Checker by id",
				"parameters": [
					{
						"name": "checkerId",
						"in": "path",
						"required": true,
						"description": "Filter Get Data Checker by id",
						"schema": {
							"type": "string",
							"nullable": false,
							"minLength": 1,
							"maxLength": 16
						},
						"examples":{
							"1818181818181818": {
								"value": "1818181818181818"
							},
							"1919191919191919": {
								"value": "1919191919191919"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success Update Data Checker",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"1818181818181818": {
										"description": "Example Update Checker Account Bambang Pranoto",
										"value": {
											"message": "Success update data checker",
											"EmployeeID": "1818181818181818",
											"Name": "Bambang Pranoto",
											"OfficeName": "Mall Kelapa Gading Jakarta",
											"OfficeAddress": "Jakarta",
											"UserID": "351010101010",
											"Username": "bamsoke",
											"Password": "12345",
											"Role": "Checker",
											"Token": "qwerty"
											}
									},
									"1919191919191919": {
										"description": "Example Update Checker Account Kurniawan Yulianto",
										"value": {
											"message": "Success update data checker",
												"EmployeeID": "1919191919191919",
												"Name": "Kurniawan Yulianto",
												"OfficeName": "Mall Kelapa Gading Jakarta",
												"OfficeAddress": "Jakarta",
												"UserID": "351111111111",
												"Username": "kurniawanasik",
												"Password": "12345",
												"Role": "Checker",
												"Token": "qwerty"
											}
									}
								}
							}
						}
					},
					"400":{
						"description": "Can not fetch data Checker",
						"content": {
							"Application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"1818181818181818": {
										"description": "Example Unsuccess Update Data Checker",
											"value": {
												"message": "Can not Update Data"
											}
									},
									"1919191919191919": {
										"description": "Example Unsuccess Update Data Checker",
											"value": {
												"message": "Can not Update Data"
											}
									}
								}	
							}
						}
					}
				}
			},
			"delete": {
				"security": [
					{
						"JWTAuth":[]
					}
				],
				"tags": ["C-Track App - Checker"],
			  	"summary": "Delete Data Checker by id",
				"description": "Delete Data Checker by id",
				"parameters": [
					{
						"name": "checkerId",
						"in": "path",
						"required": true,
						"description": "Filter Delete Data Checker by id",
						"schema": {
							"type": "string",
							"nullable": false,
							"minLength": 1,
							"maxLength": 16
						},
						"examples":{
							"1818181818181818": {
								"value": "1818181818181818"
							},
							"1919191919191919": {
								"value": "1919191919191919"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success Delete Checker Account",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean"
										}
									}
								},
								"examples": {
									"1818181818181818": {
										"description": "Success Delete Checker Account",
										"value": {
											"message": "success delete checker",
											"success": true
										}
									},
									"1919191919191919": {
										"description": "Success Delete Checker Account",
										"value": {
											"message": "success delete checker",
											"success": true
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Can not fetch data Checker",
						"content": {
							"Application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"1818181818181818": {
										"description": "Example Unsuccess Update Data Checker",
											"value": {
												"message": "Checker not found, Can not Delete Data"
											}
									},
									"1919191919191919": {
										"description": "Example Unsuccess Update Data Checker",
											"value": {
												"message": "Checker not found, Can not Delete Data"
											}
									}
								}
							}
						}
					}
				}
			}
		},
		  "/test": {
			"post": {
				"security": [
					{
						"JWTAuth":[]
					}
				],
				"tags": ["C-Track App - Test"],
			  	"summary": "Create Testing Covid Result",
				"description": "Create Testing Covid Result",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateOrUpdateTest"
							},
							"examples": {
								"1": {
									"description": "Example Create Testing Covid Result",
									"value": {
										"ID": 1,
										"Test category": "SWAB Antigen",
										"Patient": {
											"PatientID": "3030303030303030",
											"DOB": "1995-10-10",
											"POB": "Merauke",
											"Address": "Jl Panglima Sudirman",
											"City": "Jakarta",
											"Province": "DKI Jakarta",
											"Gender": "Male",
											"Blood Type": "AB",
											"Religion": "Kristen",
											"Marital Status": "Single",
											"User": {
												"UserID": "351010101010",
												"UserDOB": "iwanbuds",
												"Password": "12345",
												"Role": "Patient",
												"Token": "qwerty" 	
											}
										},
										"Result": "Negative"
									}
								},
								"2": {
									"description": "Example Create Testing Covid Result",
									"value": {
										"ID": 2,
										"Test category": "SWAB Antigen",
										"Patient": {
											"PatientID": "3737373737373737",
											"DOB": "1995-10-10",
											"POB": "Makasar",
											"Address": "Jl Panglima Sudirman",
											"City": "Jakarta",
											"Province": "DKI Jakarta",
											"Gender": "Male",
											"Blood Type": "B",
											"Religion": "Katholik",
											"Marital Status": "Single",
											"User": {
												"UserID": "351010101010",
												"UserDOB": "sansbud",
												"Password": "12345",
												"Role": "Patient",
												"Token": "qwerty" 	
											}
										},
										"Result": "Negative"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success Create Testing Covid Result",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/test"
								},
								"examples": {
									"1": {
										"description": "Example Testing Covid Result",
										"value": {
											"ID": 1,
											"Test category": "SWAB Antigen",
											"Patient": {
												"PatientID": "3030303030303030",
												"DOB": "1995-10-10",
												"POB": "Merauke",
												"Address": "Jl Panglima Sudirman",
												"City": "Jakarta",
												"Province": "DKI Jakarta",
												"Gender": "Male",
												"Blood Type": "AB",
												"Religion": "Kristen",
												"Marital Status": "Single",
												"User": {
													"UserID": "351010101010",
													"UserDOB": "iwanbuds",
													"Password": "12345",
													"Role": "Patient",
													"Token": "qwerty" 	
												}
											},
											"Result": "Negative"
										}
									},
									"2": {
										"description": "Example Create Testing Covid Result",
										"value": {
											"ID": 2,
											"Test category": "SWAB Antigen",
											"Patient": {
												"PatientID": "3737373737373737",
												"DOB": "1995-10-10",
												"POB": "Makasar",
												"Address": "Jl Panglima Sudirman",
												"City": "Jakarta",
												"Province": "DKI Jakarta",
												"Gender": "Male",
												"Blood Type": "B",
												"Religion": "Katholik",
												"Marital Status": "Single",
												"User": {
													"UserID": "351010101010",
													"UserDOB": "sansbud",
													"Password": "12345",
													"Role": "Patient",
													"Token": "qwerty" 	
												}
											},
											"Result": "Negative"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Can not Create Testing Covid Result",
						"content": {
							"Application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples":{
									"1": {
										"description": "Example Unsuccess Create New Testing Covid Result",
										"value": {
												"message": "Can not insert data"
											}
									},
									"2": {
										"description": "Example Unsuccess Create New Testing Covid Result",
										"value": {
												"message": "Can not insert data"
										}
									}
								}
							}
						}
					}
				}
			} 
		},
		  "/test/{testId}": {
			"get" : {
				"tags": ["C-Track App - Test"],
			  	"summary": "Get Data Testing Covid Result by id",
				"description": "Get Data Testing Covid Result by id",
				"parameters": [
					{
						"name": "testId",
						"in": "path",
						"required": true,
						"description": "Filter Get Data Testing Covid by id",
						"schema": {
							"type": "string",
							"nullable": false,
							"minLength": 1,
							"maxLength": 16
						},
						"examples": {
							"1": {
								"value": "1"
							},
							"2": {
								"value": "2"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success Get Data Testing Covid Result by id",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ArrayTest"
								},
								"examples": {
									"1": {
										"description": "Example Success Get Data Testing Covid Result by id",
										"value": [
											{
												"ID": 1,
												"Test category": "SWAB Antigen",
												"Patient": {
													"PatientID": "3030303030303030",
													"DOB": "1995-10-10",
													"POB": "Merauke",
													"Address": "Jl Panglima Sudirman",
													"City": "Jakarta",
													"Province": "DKI Jakarta",
													"Gender": "Male",
													"Blood Type": "AB",
													"Religion": "Kristen",
													"Marital Status": "Single",
													"User": {
														"UserID": "351010101010",
														"UserDOB": "iwanbuds",
														"Password": "12345",
														"Role": "Patient",
														"Token": "qwerty" 	
													}
												},
												"Result": "Negative"
											}
										]
									},
									"2": {
										"description": "Example Success Get Data Testing Covid Result by id",
										"value": [
											{
												"ID": 2,
												"Test category": "SWAB Antigen",
												"Patient": {
													"PatientID": "3737373737373737",
													"DOB": "1995-10-10",
													"POB": "Makasar",
													"Address": "Jl Panglima Sudirman",
													"City": "Jakarta",
													"Province": "DKI Jakarta",
													"Gender": "Male",
													"Blood Type": "B",
													"Religion": "Katholik",
													"Marital Status": "Single",
													"User": {
														"UserID": "351010101010",
														"UserDOB": "sansbud",
														"Password": "12345",
														"Role": "Patient",
														"Token": "qwerty" 	
													}
												},
												"Result": "Negative"
											}
										]
									}
								}
							}
						}
					},
					"400":{
						"description": "Can not fetch data Testing Covid Result",
						"content": {
							"Application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"1": {
										"description": "Example Unsuccess Fetch Data Testing Covid Result",
											"value": {
												"message": "Testing Covid Result not found"
											}
									},
									"2": {
										"description": "Example Unsuccess Fetch Data Testing Covid Result",
											"value": {
												"message": "Testing Covid Result not found"
											}
									}
								}	
							}
						}
					}
				}
			},
			"put": {
				"security": [
					{
						"JWTAuth":[]
					}
				],
				"tags": ["C-Track App - Test"],
			  	"summary": "Update Data Testing Covid Result id",
				"description": "Update Data Testing Covid Result id",
				"parameters": [
					{
						"name": "testsId",
						"in": "path",
						"required": true,
						"description": "Filter Get Data Testing Covid Result by id",
						"schema": {
							"type": "string",
							"nullable": false,
							"minLength": 1,
							"maxLength": 16
						},
						"examples": {
							"1": {
								"value": "1"
							},
							"2": {
								"value": "2"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success Update Testing Covid Result",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"1": {
										"description": "Example Update Testing Covid Result 1",
										"value": {
											"ID": 1,
											"Test category": "SWAB Antigen",
											"Patient": {
												"PatientID": "3030303030303030",
												"DOB": "1995-10-10",
												"POB": "Merauke",
												"Address": "Jl Panglima Sudirman",
												"City": "Jakarta",
												"Province": "DKI Jakarta",
												"Gender": "Male",
												"Blood Type": "AB",
												"Religion": "Kristen",
												"Marital Status": "Single",
												"User": {
													"UserID": "351010101010",
													"UserDOB": "iwanbuds",
													"Password": "12345",
													"Role": "Patient",
													"Token": "qwerty" 	
													}
												},
											"Result": "Negative"
										}
									},
									"2": {
										"description": "Example Update Testing Covid Result 2",
										"value": {
											"ID": 2,
											"Test category": "SWAB Antigen",
											"Patient": {
												"PatientID": "3737373737373737",
												"DOB": "1995-10-10",
												"POB": "Makasar",
												"Address": "Jl Panglima Sudirman",
												"City": "Jakarta",
												"Province": "DKI Jakarta",
												"Gender": "Male",
												"Blood Type": "B",
												"Religion": "Katholik",
												"Marital Status": "Single",
												"User": {
													"UserID": "351010101010",
													"UserDOB": "sansbud",
													"Password": "12345",
													"Role": "Patient",
													"Token": "qwerty" 	
													}
												},
											"Result": "Negative"
										}
									}
								}
							}
						}
					},
					"400":{
						"description": "Can not Update data Testing Covid Result",
						"content": {
							"Application/json": {
								"schema": {
									"$ref": "#/components/schemas/users"
								},
								"examples": {
									"1": {
										"description": "Example Unsuccess Update Data Testing Covid Result",
											"value": {
												"message": "Testing Covid Result not found"
											}
									},
									"2": {
										"description": "Example Unsuccess Update Data Testing Covid Result",
											"value": {
												"message": "Testing Covid Result not found"
											}
									}
								}	
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"securitySchemes": {
			"JWTAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		},
		"parameters": {
			"userId": {
				"name": "userId",
				"in": "path",
				"required": true,
				"description": "User id for get and update",
				"schema": {
					"type": "string",
					"minLength": 1,
					"maxLength": 16
				}
			},
			"nakesId": {
				"name": "nakesId",
				"in": "path",
				"required": true,
				"description": "Nakes id for get and update",
				"schema": {
					"type": "string",
					"minLength": 1,
					"maxLength": 16
				}
			},
			"checkerId": {
				"name": "checkerId",
				"in": "path",
				"required": true,
				"description": "Checker id for get and update",
				"schema": {
					"type": "string",
					"minLength": 1,
					"maxLength": 16
				}
			},
			"testId": {
				"name": "testId",
				"in": "path",
				"required": true,
				"description": "Test id for get and update",
				"schema": {
					"type": "number",
					"format": "int32",
					"minLength": 1,
					"maxLength": 10000
				}
			}
		},
		"schemas": {
			"users" : {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"phone number": {
						"type": "string"
					}
				}
			},
			"test" : {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"NIK": {
						"type": "string"
					},
					"date_of_test": {
						"type": "string"
					},
					"test_category_id": {
						"type": "number",
						"format": "int32"
					},
					"str_id": {
						"type": "string"
					},
					"date_of_result": {
						"type": "string"
					},
					"result_status": {
						"type": "string"
					},
					"note": {
						"type": "string"
					}
				}
			},
			"ArrayUsers" : {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/users"
				}
			},
			"ArrayTest" : {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/test"
				}
			},
			"CreateOrUpdateUser": {
				"type": "object",
				"properties": {
					"ID": {
						"type": "number",
						"format": "uint32"
					},
					"Name": {
						"type": "string"
					},
					"Role": {
						"type": "string"
					},
					"Token": {
						"type": "string"
					}
				}
			},
			"CreateOrUpdateTest": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"NIK": {
						"type": "string"
					},
					"date_of_test": {
						"type": "string"
					},
					"test_category_id": {
						"type": "number",
						"format": "int32"
					},
					"str_id": {
						"type": "string"
					},
					"date_of_result": {
						"type": "string"
					},
					"result_status": {
						"type": "string"
					},
					"note": {
						"type": "string"
					}
				}
			}
		}
	}
}